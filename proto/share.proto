syntax = "proto3";

package share;

option go_package = "minik8s/pkg/proto";

message HelloRequest {
    string name = 1;
}

message HelloResponse {
    string reply = 1;
}

// Pod 
message ApplyPodRequest {
    bytes data = 1;
}

message DeletePodRequest {
    bytes data = 1;
}

message GetPodRequest {
    string PodName = 1;
}

message GetPodResponse {
    repeated bytes PodData = 1;
}

message StatusResponse {
    int32 status = 1;
}

message RegisterNodeRequest{
    string NodeName = 1;
    string NodeIp = 2;
    string kubelet_url = 3;
}

message UpdatePodStatusRequest {
    bytes Data = 1;
}

// Deployment
message ApplyDeploymentRequest{
    bytes Data = 1;
}

message GetDeploymentRequest{
    string DeploymentName = 1;
}

message DeleteDeploymentRequest{
    string DeploymentName = 1;
}

message GetDeploymentResponse{
    bytes Data = 1;
}

//HorizontalPodAutoscaler
message ApplyHorizontalPodAutoscalerRequest{
    bytes Data = 1;
}

message GetHorizontalPodAutoscalerRequest{
    string Data = 1;
}
message GetHorizontalPodAutoscalerResponse{
    bytes Data = 1;
}
message UpdateHorizontalPodAutoscalerRequest{
    bytes Data=1;
}
message UpdateHorizontalPodAutoscalerResponse{
    string Data=1;
}

message DeleteHorizontalPodAutoscaler{
    string Data = 1;
}

// service
message ApplyServiceRequest{
    bytes Data = 1;
}

message GetServiceRequest{
    string ServiceName = 1;
}

message DeleteServiceRequest{
    string ServiceName = 1;
}

message GetServiceResponse{
    repeated bytes Data = 1;
}

// apiserver -> kubelet
message ApplyServiceRequest2{
    bytes Data = 1;
    repeated string PodNames = 2;
    repeated string PodIps = 3;
}

message DeleteServiceRequest2{
    string ServiceName = 1;
}

// Node
message GetNodeRequest{
    string NodeName = 1;
}

message GetNodeResponse{
    bytes NodeData = 1;
}

//Dns
message ApplyDnsRequest{
    bytes Data = 1;
}

message GetDnsRequest{
    string DnsName = 1;
}

message DeleteDnsRequest{
    string DnsName = 1;
}

message GetDnsResponse{
    bytes Data = 1;
}
// Job
message ApplyJobRequest {
    bytes Data = 1;
}

message GetJobRequest {
    string JobName = 1;
}

message GetJobResponse {
    bytes Data = 1;
}

// function
message ApplyFunctionRequest {
    bytes Data = 1;
}
